metadata:
  repository: autonomy/conform
  variables:
    binaryPath: /conform
    gitRepository: github.com/autonomy/conform
    maintainer: Andrew Rynhard <andrew.rynhard@autonomy.io>

policies:
  - type: conventionalCommit
    spec:
      types:
        - "chore"
        - "docs"
        - "perf"
        - "refactor"
        - "style"
        - "test"
      scopes:
        - "ci"
        - "cli"
        - "docker"
        - "fmt"
        - "git"
        - "metadata"
        - "pipeline"
        - "policy"
        - "readme"
        - "renderer"
        - "service"
        - "*"

script:
  template: |
    {{ fromURL "https://raw.githubusercontent.com/autonomy/conform-templates/master/docker/deploy.sh" }}

pipeline:
  stages:
    - test
    - build

stages:
  test:
    artifacts:
      - source: /src/github.com/autonomy/conform/coverage.txt
        destination: coverage.txt
    tasks:
      - test
  build:
    tasks:
      - binary
      - image

tasks:
  binary:
    template: |
      FROM golang:1.11.1 AS {{ .Docker.CurrentStage }}
      WORKDIR /src/{{ index .Variables "gitRepository" }}
      COPY ./ ./
      {{ if and .Git.IsClean .Git.IsTag }}
      RUN go build -o {{ index .Variables "binaryPath" }} -ldflags "-X \"{{ index .Variables "gitRepository" }}/cmd.Tag={{ trimAll "v" .Git.Tag }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      {{ else if .Git.IsClean }}
      RUN go build -o {{ index .Variables "binaryPath" }} -ldflags "-X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      {{ else }}
      RUN go build -o {{ index .Variables "binaryPath" }}
      {{ end }}
  test:
    template: |
      FROM golang:1.11.1 AS {{ .Docker.CurrentStage }}
      ENV GO111MODULE auto
      RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.10.1
      WORKDIR /src/{{ index .Variables "gitRepository" }}
      COPY ./ ./
      RUN go mod download
      RUN go mod verify
      RUN chmod +x ./hack/test.sh
      RUN ./hack/test.sh --lint ./hack/golangci-lint.yaml
      RUN ./hack/test.sh --unit
      RUN ./hack/test.sh --coverage

  image:
    template: |
      FROM alpine:3.6 AS {{ .Docker.CurrentStage }}
      LABEL maintainer="{{ index .Variables "maintainer" }}"
      RUN apk --update add bash \
          && rm -rf /var/cache/apk/*
      COPY --from=binary {{ index .Variables "binaryPath" }} /bin
      ENTRYPOINT ["conform"]
