metadata:
  repository: autonomy/conform
  variables:
    linuxBinaryPath: /conform-linux-amd64
    darwinBinaryPath: /conform-darwin-amd64
    gitRepository: github.com/autonomy/conform
    maintainer: Andrew Rynhard <andrew.rynhard@autonomy.io>
policies:
- type: conventionalCommit
  spec:
    types:
    - chore
    - docs
    - perf
    - refactor
    - style
    - test
    scopes:
    - ci
    - cli
    - docker
    - fmt
    - git
    - metadata
    - pipeline
    - policy
    - readme
    - renderer
    - service
    - '*'
script:
  template: |
    #!/bin/bash

    set -e

    {{ if and (.Git.IsClean) (or (.Git.IsTag) (eq .Git.Branch "master")) }}
    docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD
    docker tag {{ .Docker.Image.Name }}:{{ .Docker.Image.Tag }} {{ .Docker.Image.Name }}:latest
    docker push {{ .Docker.Image.Name }}:{{ .Docker.Image.Tag }}
    docker push {{ .Docker.Image.Name }}:latest
    {{ if .Git.IsTag }}
    docker tag {{ .Docker.Image.Name }}:{{ .Docker.Image.Tag }} {{ .Docker.Image.Name }}:{{ .Version.Original }}
    docker push {{ .Docker.Image.Name }}:{{ .Version.Original }}
    {{ end }}
    {{ end }}
pipeline:
  stages:
  - src
  - test
  - build
  - image
stages:
  build:
    artifacts:
    - source: /conform-linux-amd64
      destination: ./build/conform-linux-amd64
    - source: /conform-darwin-amd64
      destination: ./build/conform-darwin-amd64
    tasks:
    - build
  image:
    tasks:
    - image
  src:
    tasks:
    - src
  test:
    artifacts:
    - source: /src/github.com/autonomy/conform/coverage.txt
      destination: coverage.txt
    tasks:
    - test
tasks:
  build:
    template: |
      FROM autonomy/conform:src AS {{ .Docker.CurrentStage }}
      {{ if and .Git.IsClean .Git.IsTag }}
      RUN go build -o {{ index .Variables "linuxBinaryPath" }} -ldflags "-s -w -X \"{{ index .Variables "gitRepository" }}/cmd.Tag={{ trimAll "v" .Git.Tag }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      RUN GOOS=darwin go build -o {{ index .Variables "darwinBinaryPath" }} -ldflags "-s -w -X \"{{ index .Variables "gitRepository" }}/cmd.Tag={{ trimAll "v" .Git.Tag }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      {{ else if .Git.IsClean }}
      RUN go build -o {{ index .Variables "linuxBinaryPath" }} -ldflags "-s -w -X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      RUN GOOS=darwin go build -o {{ index .Variables "darwinBinaryPath" }} -ldflags "-s -w -X \"{{ index .Variables "gitRepository" }}/cmd.SHA={{ .Git.SHA }}\" -X \"{{ index .Variables "gitRepository" }}/cmd.Built={{ .Built }}\""
      {{ else }}
      RUN go build -o {{ index .Variables "linuxBinaryPath" }}
      RUN GOOS=darwin go build -o {{ index .Variables "darwinBinaryPath" }}
      {{ end }}
  image:
    template: |
      FROM alpine:3.8 AS {{ .Docker.CurrentStage }}
      LABEL maintainer="{{ index .Variables "maintainer" }}"
      RUN apk --no-cache add bash
      COPY --from={{ .Repository}}:build {{ index .Variables "linuxBinaryPath" }} /bin/conform
      ENTRYPOINT ["conform"]
  src:
    template: |
      FROM golang:1.11.1 AS {{ .Docker.CurrentStage }}
      ENV GO111MODULE on
      ENV CGO_ENABLED 0
      WORKDIR /src/{{ index .Variables "gitRepository" }}
      COPY ./ ./
      RUN go mod download
      RUN go mod verify
  test:
    template: |
      FROM autonomy/conform:src AS {{ .Docker.CurrentStage }}
      RUN curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.10.1
      RUN chmod +x ./hack/test.sh
      RUN ./hack/test.sh --lint ./hack/golangci-lint.yaml
      RUN ./hack/test.sh --unit
      RUN ./hack/test.sh --coverage
